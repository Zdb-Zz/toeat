<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdb.demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zdb.demo.entity.User">
        <!--
        @mbggenerated
        -->
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="user_pass_word" jdbcType="VARCHAR" property="userPassWord" />
        <result column="user_nick" jdbcType="VARCHAR" property="userNick" />
        <result column="user_sex" jdbcType="VARCHAR" property="userSex" />
        <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
        <result column="user_mail" jdbcType="VARCHAR" property="userMail" />
        <result column="user_type" jdbcType="INTEGER" property="userType" />
        <result column="user_store" jdbcType="INTEGER" property="userStore" />
        <result column="user_pay_password" jdbcType="VARCHAR" property="userPayPassword" />
        <result column="user_token" jdbcType="VARCHAR" property="userToken" />
        <result column="user_salt" jdbcType="VARCHAR" property="userSalt" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
        @mbggenerated
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
        @mbggenerated
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
        @mbggenerated
        -->
        user_id, user_name, user_pass_word, user_nick, user_sex, user_phone, user_mail, user_type,
        user_store, user_pay_password, user_token, user_salt
    </sql>
    <select id="selectByExample" parameterType="com.zdb.demo.entity.UserExample" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select
        <include refid="Base_Column_List" />
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.zdb.demo.entity.UserExample">
        <!--
        @mbggenerated
        -->
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.zdb.demo.entity.User">
        <!--
        @mbggenerated
        -->
        insert into user (user_id, user_name, user_pass_word,
        user_nick, user_sex, user_phone,
        user_mail, user_type, user_store,
        user_pay_password, user_token, user_salt
        )
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassWord,jdbcType=VARCHAR},
        #{userNick,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR},
        #{userMail,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{userStore,jdbcType=INTEGER},
        #{userPayPassword,jdbcType=VARCHAR}, #{userToken,jdbcType=VARCHAR}, #{userSalt,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.zdb.demo.entity.User">
        <!--
        @mbggenerated
        -->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassWord != null">
                user_pass_word,
            </if>
            <if test="userNick != null">
                user_nick,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="userMail != null">
                user_mail,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="userStore != null">
                user_store,
            </if>
            <if test="userPayPassword != null">
                user_pay_password,
            </if>
            <if test="userToken != null">
                user_token,
            </if>
            <if test="userSalt != null">
                user_salt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassWord != null">
                #{userPassWord,jdbcType=VARCHAR},
            </if>
            <if test="userNick != null">
                #{userNick,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userMail != null">
                #{userMail,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="userStore != null">
                #{userStore,jdbcType=INTEGER},
            </if>
            <if test="userPayPassword != null">
                #{userPayPassword,jdbcType=VARCHAR},
            </if>
            <if test="userToken != null">
                #{userToken,jdbcType=VARCHAR},
            </if>
            <if test="userSalt != null">
                #{userSalt,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zdb.demo.entity.UserExample" resultType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
        @mbggenerated
        -->
        update user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userPassWord != null">
                user_pass_word = #{record.userPassWord,jdbcType=VARCHAR},
            </if>
            <if test="record.userNick != null">
                user_nick = #{record.userNick,jdbcType=VARCHAR},
            </if>
            <if test="record.userSex != null">
                user_sex = #{record.userSex,jdbcType=VARCHAR},
            </if>
            <if test="record.userPhone != null">
                user_phone = #{record.userPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.userMail != null">
                user_mail = #{record.userMail,jdbcType=VARCHAR},
            </if>
            <if test="record.userType != null">
                user_type = #{record.userType,jdbcType=INTEGER},
            </if>
            <if test="record.userStore != null">
                user_store = #{record.userStore,jdbcType=INTEGER},
            </if>
            <if test="record.userPayPassword != null">
                user_pay_password = #{record.userPayPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.userToken != null">
                user_token = #{record.userToken,jdbcType=VARCHAR},
            </if>
            <if test="record.userSalt != null">
                user_salt = #{record.userSalt,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
        @mbggenerated
        -->
        update user
        set user_id = #{record.userId,jdbcType=INTEGER},
        user_name = #{record.userName,jdbcType=VARCHAR},
        user_pass_word = #{record.userPassWord,jdbcType=VARCHAR},
        user_nick = #{record.userNick,jdbcType=VARCHAR},
        user_sex = #{record.userSex,jdbcType=VARCHAR},
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
        user_mail = #{record.userMail,jdbcType=VARCHAR},
        user_type = #{record.userType,jdbcType=INTEGER},
        user_store = #{record.userStore,jdbcType=INTEGER},
        user_pay_password = #{record.userPayPassword,jdbcType=VARCHAR},
        user_token = #{record.userToken,jdbcType=VARCHAR},
        user_salt = #{record.userSalt,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zdb.demo.entity.User">
        <!--
        @mbggenerated
        -->
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassWord != null">
                user_pass_word = #{userPassWord,jdbcType=VARCHAR},
            </if>
            <if test="userNick != null">
                user_nick = #{userNick,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userMail != null">
                user_mail = #{userMail,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="userStore != null">
                user_store = #{userStore,jdbcType=INTEGER},
            </if>
            <if test="userPayPassword != null">
                user_pay_password = #{userPayPassword,jdbcType=VARCHAR},
            </if>
            <if test="userToken != null">
                user_token = #{userToken,jdbcType=VARCHAR},
            </if>
            <if test="userSalt != null">
                user_salt = #{userSalt,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zdb.demo.entity.User">
        <!--
        @mbggenerated
        -->
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_pass_word = #{userPassWord,jdbcType=VARCHAR},
        user_nick = #{userNick,jdbcType=VARCHAR},
        user_sex = #{userSex,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=VARCHAR},
        user_mail = #{userMail,jdbcType=VARCHAR},
        user_type = #{userType,jdbcType=INTEGER},
        user_store = #{userStore,jdbcType=INTEGER},
        user_pay_password = #{userPayPassword,jdbcType=VARCHAR},
        user_token = #{userToken,jdbcType=VARCHAR},
        user_salt = #{userSalt,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>